<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>bjornruud.net</title>
        <link>https://bjornruud.net</link>
        <description></description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https://bjornruud.net/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Fri, 19 Feb 2016 00:00:00 +0000</lastBuildDate>
        <item>
            <title>DIY NAS</title>
            <pubDate>Fri, 19 Feb 2016 00:00:00 +0000</pubDate>
            <link>https://bjornruud.net/blog/2016/diy-nas/</link>
            <guid>https://bjornruud.net/blog/2016/diy-nas/</guid>
            <description>&lt;h1 id=&quot;diy-nas&quot;&gt;DIY NAS&lt;&#x2F;h1&gt;
&lt;p&gt;The time has come to retire my &lt;a href=&quot;http:&#x2F;&#x2F;synology.com&quot;&gt;Synology&lt;&#x2F;a&gt; DS411slim NAS.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;Synology_DS411slim.jpg&quot; alt=&quot;Synology DS411slim&quot; title=&quot;So long, and thanks for all the fish&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It is an excellent NAS box, tiny and silent and has plenty of features, but I find myself wanting more power, storage space and increased data safety.&lt;&#x2F;p&gt;
&lt;p&gt;The more power requirement stems from a desire to run &lt;a href=&quot;https:&#x2F;&#x2F;plex.tv&quot;&gt;Plex Media Server&lt;&#x2F;a&gt; on the NAS, with enough power to transcode at least one stream in realtime from a 1080p source.&lt;&#x2F;p&gt;
&lt;p&gt;Storage space has lately become an issue. The DS411slim has 4 2.5&amp;quot; drive bays, and max capacity of such drives are currently 2 TB which is far behind 3.5&amp;quot; drives. I want to put all my media on the NAS; DVDs, Blu-Rays, CDs, Photos and movie clips, in addition to TimeMachine backups and various files and disc images. I have calculated my storage requirements to be about 6 TB, a far cry from my current capacity which is 2 TB (4x1 TB in RAID10).&lt;&#x2F;p&gt;
&lt;p&gt;Extra data safety and ensured data integrity is necessary with large storage capacities. I don&#x27;t want a stray cosmic ray or faulty hardware to mangle my files. Using ECC memory, disk mirroring and a self-healing file system like ZFS or Btrfs should be safe enough.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, any storage solution requires an off-site backup to be truly safe, and for that I&#x27;m already using &lt;a href=&quot;http:&#x2F;&#x2F;jottacloud.com&quot;&gt;Jottacloud&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As the title implies I&#x27;ve decided to build my own NAS this time. Why not go with a Synology NAS once more? They have begun rolling out models with Btrfs support after all. I would recommend those models to anyone who wants a NAS that is easy to configure and use, but they don&#x27;t fulfill all my requirements: Not powerful enough for Plex transcoding of 1080p source material, no ECC memory, limited memory, limited expandability without external enclosures, and adding software unsupported by Synology is difficult.&lt;&#x2F;p&gt;
&lt;p&gt;My first thought was to just do a regular server install using either Linux with Btrfs or FreeBSD with ZFS. That would work just fine and give me maximum flexibility. However, configuring and maintaining the base software installation of a server is time consuming and sometimes difficult, so I want to avoid that.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.freenas.org&quot;&gt;FreeNAS&lt;&#x2F;a&gt;, based on &lt;a href=&quot;http:&#x2F;&#x2F;www.freebsd.org&quot;&gt;FreeBSD&lt;&#x2F;a&gt;, solves that problem. The base system comes preconfigured for NAS use and is easy to update. It uses ZFS for storage, and has a useful (but somewhat confusing) administration web GUI. There is a Plex plug-in that is actively kept up to date, and I can install additional software in jails.&lt;&#x2F;p&gt;
&lt;p&gt;FreeNAS is useless without hardware, so let&#x27;s have a look at the PC components I have selected.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;components&quot;&gt;Components&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Case: &lt;a href=&quot;http:&#x2F;&#x2F;www.fractal-design.com&#x2F;home&#x2F;product&#x2F;cases&#x2F;node-series&#x2F;node-304-black&quot;&gt;Fractal Design Node 304&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;Fractal_Design_Node_304-small.jpg&quot; alt=&quot;Fractal Design Node 304&quot; title=&quot;Fractal Design Node 304&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Small, silent, good looking and has 6 3,5&amp;quot; drive bays. With todays drive capacities that should last a while. Despite the small size it has room for a full-sized ATX PSU.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;PSU: &lt;a href=&quot;http:&#x2F;&#x2F;www.fractal-design.com&#x2F;home&#x2F;product&#x2F;power-supplies&#x2F;integra-m&#x2F;integra-m-450w&quot;&gt;Fractal Design Integra M 450W&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;Fractal_Design_Integra_M_450W-small.jpg&quot; alt=&quot;Fractal Design Integra M 450W&quot; title=&quot;Fractal Design Integra M 450W&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Since this will be a low-power mini-ITX build it will have very modest power requirements. It&#x27;s more important that the PSU is stable, efficient and silent. This PSU is modular, which is a bonus when trying to fit everything in a small case.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Motherboard: &lt;a href=&quot;http:&#x2F;&#x2F;www.asrockrack.com&#x2F;general&#x2F;productdetail.asp?Model=E3C226D2I#Specifications&quot;&gt;ASRock E3C226D2I&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;ASRock_E3C226D2I-small.jpg&quot; alt=&quot;ASRock E3C226D2I&quot; title=&quot;ASRock E3C226D2I&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This board has everything I need: ECC RAM support, 6 SATA3 ports, USB 3, Intel NICs, and is compatible with Intel Core i3 T-series CPUs. I thought about going for a bleeding edge Intel Skylake compatible motherboard, but for the time being finding one with the required specifications isn&#x27;t easy. I don&#x27;t really need the slight boost in performance and there are benefits with technology that is a generation or two behind. Hardware bugs have likely been found and fixed in newer revisions and firmwares, and drivers have been updated and optimized. The price is also lower.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;CPU: &lt;a href=&quot;http:&#x2F;&#x2F;ark.intel.com&#x2F;products&#x2F;77481&#x2F;Intel-Core-i3-4130T-Processor-3M-Cache-2_90-GHz&quot;&gt;Intel Core i3 4130T&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A Core i3 has more than enough power for a NAS, but most important of all the Haswell (and newer) i3 CPUs share a feature with Xeons: ECC RAM support. This is a T-series model with a TDP of only 35W. Less heat means less need for cooling which means less noise. Will this CPU be enough to transcode 1080p Blu-Ray source material? According to benchmarks it should be. We&#x27;ll see.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Memory: &lt;a href=&quot;http:&#x2F;&#x2F;www.kingston.com&#x2F;dataSheets&#x2F;KVR16E11_8HB.pdf&quot;&gt;Kingston ValueRAM Server Premier 8GB 1600MHz DDR3 ECC&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Not much to say. Cheap unbuffered ECC RAM targeted for server use. The motherboard only supports 16 GB max, so I bought two. For a NAS RAM is important, especially when using ZFS. Always buy as much RAM as you can afford (within reason).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;USB flash drive: &lt;a href=&quot;https:&#x2F;&#x2F;www.sandisk.com&#x2F;home&#x2F;usb-flash&#x2F;extreme-usb&quot;&gt;SanDisk Extreme Pro 16GB USB 3.0&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;Sandisk_Extreme_Pro_16GB.png&quot; alt=&quot;SanDisk Extreme Pro 16GB&quot; title=&quot;SanDisk Extreme Pro 16GB&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;FreeNAS is usually installed to and run from a USB flash drive. I opted for one with high read&#x2F;write speeds, but have no idea what kind of longevity I can expect from it. The system drive isn&#x27;t a critical component in this build, so if it breaks it&#x27;s easy and quick to do a new FreeNAS install on another flash drive and import the previous configuration.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;HDD: &lt;a href=&quot;http:&#x2F;&#x2F;www.wdc.com&#x2F;en&#x2F;products&#x2F;products.aspx?id=810&quot;&gt;Western Digital Red SOHO NAS 6 TB&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;My planned drive configuration is to use a zpool of mirrors. I ordered 4x6 TB for now and can add one more mirror to the pool when I need more space. When all drive bays are full I can upgrade the mirrors with larger capacity drives. Upgrading this way is not optimal for performance, but it is flexible, has a low up-front cost, and for my use case it should suffice.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-build&quot;&gt;The Build&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;nas_packages-small.jpg&quot; alt=&quot;All packages&quot; title=&quot;If you build it they will come&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Exciting!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;nas_node_304-small.jpg&quot; alt=&quot;Node Case&quot; title=&quot;Wazzup?&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Node 304 is a good looking case that can easily be placed in the living room. The fans are quiet and the case comes with a built-in fan voltage regulator. I have noticed that the smaller front fans have trouble starting if the system is powered on with the regulator set to 5V, so I always use 12V when powering on, and then adjust the voltage down.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;nas_case_side-small.jpg&quot; alt=&quot;Case Opened Side&quot; title=&quot;Case opened side&quot; &#x2F;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;nas_case_top-small.jpg&quot; alt=&quot;Case Opened Top&quot; title=&quot;Case opened top&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;ll be a tight fit, but there should be room for everything and still have good airflow.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;nas_case_top_mb-small.jpg&quot; alt=&quot;Case With Motherboard&quot; title=&quot;Motherboard in place&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;No problem fitting the motherboard. Remember to mount the backplate first, or you&#x27;ll have to remove the motherboard to mount it (yes, I forgot to do that).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;nas_case_top_psu-small.jpg&quot; alt=&quot;Case With PSU&quot; title=&quot;PSU in place&quot; &#x2F;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;nas_case_mb_psu_side-small.jpg&quot; alt=&quot;Case With PSU Side&quot; title=&quot;PSU from side&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;PSU fits nicely too. The case supports full-size ATX PSUs, but it will be a tight fith with the bigger ones, especially of the non-modular variety.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;nas_case_top_hdd_bay-small.jpg&quot; alt=&quot;Case With HDD&quot; title=&quot;HDD pair mounted&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;One disk pair mounted. Cables need cleanup.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;nas_case_final_side_2-small.jpg&quot; alt=&quot;Case Final 2&quot; title=&quot;Final case 2&quot; &#x2F;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2016&#x2F;diy-nas&#x2F;nas_case_final_side_1-small.jpg&quot; alt=&quot;Case Final 1&quot; title=&quot;Final case 1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Voila! Here is the result. As you can see getting the cables out of the way is a challenge in such a small case, but doable. The SATA and HDD power cables are bunted together behind the drive bays. The rest are run along the side to the PSU area. It looks a bit messy on the images, but there is plenty of room above the motherboard and airflow is good.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;testing-and-results&quot;&gt;Testing and Results&lt;&#x2F;h2&gt;
&lt;p&gt;Testing the hardware before use is essential, but I&#x27;m not going to write about that since Jeff Atwood over at &lt;a href=&quot;http:&#x2F;&#x2F;blog.codinghorror.com&#x2F;&quot;&gt;Coding Horror&lt;&#x2F;a&gt; recently wrote &lt;a href=&quot;http:&#x2F;&#x2F;blog.codinghorror.com&#x2F;is-your-computer-stable&#x2F;&quot;&gt;an article&lt;&#x2F;a&gt; about it. Read it and do it.&lt;&#x2F;p&gt;
&lt;p&gt;The performance of this build has exceeded my expectations. With FreeNAS I consistently get 800-900 Mbit&#x2F;s read and write speeds on a CIFS (SMB) share, compared to half that with the DS411slim. Plex transcoding works fine even on Blu-Ray source material, and the whole system feels very snappy and responsive. I would have saved a lot of time just buying another Synology NAS, but I&#x27;m more than satisfied with the result. I can highly recommend building your own NAS if you&#x27;re willing to do the required research.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>Encrypted backup to cloud using EncFS on OS X</title>
            <pubDate>Sun, 29 Mar 2015 00:00:00 +0000</pubDate>
            <link>https://bjornruud.net/blog/2015/secure-cloud-backup/</link>
            <guid>https://bjornruud.net/blog/2015/secure-cloud-backup/</guid>
            <description>&lt;h1 id=&quot;encrypted-backup-to-cloud-using-encfs-on-os-x&quot;&gt;Encrypted backup to cloud using EncFS on OS X&lt;&#x2F;h1&gt;
&lt;p&gt;Using a file synchronization and backup service in the cloud like &lt;a href=&quot;https:&#x2F;&#x2F;jottacloud.com&quot;&gt;JottaCloud&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;dropbox.com&quot;&gt;Dropbox&lt;&#x2F;a&gt; for backups is convenient, but not as secure as you might think. In order to provide services like file sharing and media preview they have to use an encryption key that they control on their end, which means they can decrypt your data. If you want full privacy you have to be able to supply your own encryption key, and very few cloud storage providers have that option.&lt;&#x2F;p&gt;
&lt;p&gt;You can however work around this problem by encrypting the backup before uploading it to the storage provider. Encrypted archives or disk images can be used and are easy to setup, but another option is to use &lt;a href=&quot;https:&#x2F;&#x2F;vgough.github.io&#x2F;encfs&#x2F;&quot;&gt;EncFS&lt;&#x2F;a&gt; to create an encrypted view of some part of your filesystem.&lt;&#x2F;p&gt;
&lt;p&gt;Note: This article assumes you know your way around a Terminal window, and it will be easier to follow if you know a thing or two about bash scripting (bonus points for expect&#x2F;tcl knowledge).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;install-homebrew&quot;&gt;Install Homebrew&lt;&#x2F;h2&gt;
&lt;p&gt;The easiest way to get started is to install EncFS with &lt;a href=&quot;http:&#x2F;&#x2F;brew.sh&quot;&gt;Homebrew&lt;&#x2F;a&gt;. Many Homebrew formulae require Xcode for compilation, so go to the AppStore and install Xcode. Open Xcode and accept any license agreements that pop up, then quit Xcode.&lt;&#x2F;p&gt;
&lt;p&gt;Next you need to install the Xcode command line tools. They are provided in the Xcode app bundle, and can be quickly installed from the command line. Open Terminal and type the following:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ xcode-select --install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Follow the instructions in the popup dialog, and after that you won&#x27;t have to worry about Xcode again.&lt;&#x2F;p&gt;
&lt;p&gt;Now you must install Homebrew. Paste the following into a terminal (or copy it from the Homebrew website if you are cautious&#x2F;paranoid).&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ ruby -e &amp;quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;install)&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Follow the instructions, and then you are ready to brew.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;install-encfs&quot;&gt;Install EncFS&lt;&#x2F;h2&gt;
&lt;p&gt;Installing EncFS is simple:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ brew install encfs
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If you are running OS X 10.10 or later you&#x27;ll get an error about having to manually install &lt;code&gt;osxfuse&lt;&#x2F;code&gt;. This is because Yosemite (and later OS X versions) require all kernel extensions to be signed, and Homebrew doesn&#x27;t do binary signing at the moment. Just follow the instructions provided by Homebrew to manually install &lt;code&gt;osxfuse&lt;&#x2F;code&gt;, then do &lt;code&gt;brew install encfs&lt;&#x2F;code&gt; again. Type &lt;code&gt;encfs -v&lt;&#x2F;code&gt; to verify EncFS is available.&lt;&#x2F;p&gt;
&lt;p&gt;Note: If you&#x27;re having trouble installing &lt;code&gt;osxfuse&lt;&#x2F;code&gt;, check if you already have it installed by looking for a &amp;quot;Fuse for OS X&amp;quot; icon in &amp;quot;System Preferences&amp;quot;. If there is such an icon there, open it and press the &amp;quot;Remove&amp;quot; button before trying to install again.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;configure-reverse-encryption&quot;&gt;Configure reverse encryption&lt;&#x2F;h2&gt;
&lt;p&gt;EncFS has an option to do &amp;quot;reverse encryption&amp;quot;. This creates a folder that acts as an encrypted view of another folder, where the encrypted data is provided on the fly from the unencrypted files. This is the opposite of storing the files in encrypted form and providing an unencrypted view, hence &amp;quot;reverse encryption&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;It is simple to configure. Assuming an existing folder called &lt;code&gt;MyFolder&lt;&#x2F;code&gt; and you want an encrypted folder called &lt;code&gt;MyFolderEnc&lt;&#x2F;code&gt;, try this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ encfs --reverse MyFolder MyFolderEnc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You will be presented with two standard configuration options, &lt;code&gt;standard&lt;&#x2F;code&gt; and &lt;code&gt;paranoid&lt;&#x2F;code&gt;, and an &lt;code&gt;expert&lt;&#x2F;code&gt; option. Standard defaults to AES-192 encryption with mostly default options, while Paranoid defaults to AES-256 with a few security enhancements. Even Standard is overkill for most use cases so select that and provide a password. Take look in the &lt;code&gt;MyFolderEnc&lt;&#x2F;code&gt; folder and you&#x27;ll see encrypted versions of the files in &lt;code&gt;MyFolder&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;To remove the encrypted view, unmount it:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ umount MyFolderEnc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;encryption-options&quot;&gt;Encryption options&lt;&#x2F;h2&gt;
&lt;p&gt;Using the &lt;code&gt;expert&lt;&#x2F;code&gt; setup option is useful to tailor the configuration to certain use cases. Let&#x27;s take a look at the options that can help with performance and portability for the backup scenario described in this article.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Algorithm&lt;&#x2F;strong&gt;. Choose AES.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Key size&lt;&#x2F;strong&gt;. You can choose between 128, 196 and 256 bits. All are considered secure. Lower key size gives better performance, although it&#x27;s not a huge difference on modern hardware. I usually choose 128 for data that needs to be private but isn&#x27;t considered secret.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Filesystem block size&lt;&#x2F;strong&gt;. The default is fine. Set it to the block size of your filesystem if you want to optimize. Use &lt;code&gt;diskutil info &#x2F;&lt;&#x2F;code&gt; and search for &amp;quot;Allocation Block Size&amp;quot;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Filename encoding&lt;&#x2F;strong&gt;. Go for &amp;quot;Block32&amp;quot;. The block encodings make it impossible to determine or approximate original filename length, and the &amp;quot;Block32&amp;quot; variant is appropriate for case-insensitive or case-aware filesystems like HFS+.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Per-file initialization vectors&lt;&#x2F;strong&gt;. You want this, or else duplicate files will be the same after encryption, which is an unnecessary information leak.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Setting up encryption with EncFS creates a &lt;code&gt;.encfs6.xml&lt;&#x2F;code&gt; file in the source folder with the configured settings and the encryption key. Make a backup of this file and store it safely. If the config file is lost you won&#x27;t be able to restore the backup!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;mount-shares-and-encrypted-folders&quot;&gt;Mount shares and encrypted folders&lt;&#x2F;h2&gt;
&lt;p&gt;Let&#x27;s assume you have a NAS at home with Samba shares &lt;code&gt;share1&lt;&#x2F;code&gt; and &lt;code&gt;share2&lt;&#x2F;code&gt; that you want to backup to some cloud storage provider, and that you want the shares and encrypted folders mounted on login. The encrypted folders will be mounted to &lt;code&gt;share1-encfs&lt;&#x2F;code&gt; and &lt;code&gt;share2-encfs&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;First you test the setup and prepare the EncFS config file:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ cd
$ mkdir -p Volumes&#x2F;share1 &amp;amp;&amp;amp; cd Volumes
$ mount -t smbfs &amp;quot;&#x2F;&#x2F;user@server&#x2F;share1&amp;quot; &amp;quot;$HOME&#x2F;Volumes&#x2F;share1&amp;quot;
[... Type password ...]
$ ls share1 # Verify contents are there
$ mkdir share1-encfs
$ encfs --reverse &amp;quot;$HOME&#x2F;Volumes&#x2F;share1&amp;quot; &amp;quot;$HOME&#x2F;Volumes&#x2F;share1-encfs&amp;quot;
[... Configure EncFS settings ...]
$ ls share1-encfs # Verify encrypted contents are there
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Repeat this for all shares you want to encrypt.&lt;&#x2F;p&gt;
&lt;p&gt;Both Samba and EncFS will require passwords, and you store those in the login keychain for easy (but secure) access from scripts. Open the &amp;quot;Keychain Access&amp;quot; app, select the &amp;quot;login&amp;quot; keychain and the &amp;quot;Passwords&amp;quot; category.&lt;&#x2F;p&gt;
&lt;p&gt;First create a password item for mounting encrypted folders. In the menu, select &amp;quot;File -&amp;gt; New Password Item&amp;quot;. Give the item a name (like &amp;quot;EncFS&amp;quot;), set the &amp;quot;Account Name&amp;quot; to your user, and provide a password. Now test it:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ security find-generic-password -gs EncFS -w
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If this is the first time you use the &lt;code&gt;security&lt;&#x2F;code&gt; command you will get a popup asking for permission to access the keychain. Select &amp;quot;Always allow&amp;quot; to be able to run the command in a non-interactive session.&lt;&#x2F;p&gt;
&lt;p&gt;If you are lucky you already have a password item for the server with the network shares. Search the item list for a network password with the name or IP of the server. If you found one, double-click it to see the details. Check that account, address and protocol are correct, and take note of them. If you can&#x27;t find a matching network password you can create one manually, or simply connect to the share in the Finder and choose to remember credentials in the connect dialog.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;mount-scripts&quot;&gt;Mount scripts&lt;&#x2F;h2&gt;
&lt;p&gt;Next create a script for mounting the SMB shares.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ touch mount_smb.exp
$ chmod a+x mount_smb.exp
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Why the &lt;code&gt;exp&lt;&#x2F;code&gt; extension? I found that &lt;code&gt;mount_smbfs&lt;&#x2F;code&gt; has issues with many passwords when they are supplied as part of the host address, so this script will use &lt;code&gt;expect&lt;&#x2F;code&gt; which uses the Tcl scripting language to automatically provide user input. Open the file in your favorite text editor and paste in and modify this example script:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;#!&#x2F;usr&#x2F;bin&#x2F;expect -f

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; smb_server &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;server&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; smb_user &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;user&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; smb_password [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; security find-internet-password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;a $smb_user &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;s $smb_server &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;smb &amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;w]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; smb_path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;~&#x2F;Volumes&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$smb_server&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;puts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;Mounting volumes on &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$smb_user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$smb_server&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt; to &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$smb_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; smb_volumes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;{&amp;quot;share1&amp;quot; &amp;quot;share2&amp;quot;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;foreach&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; vol $smb_volumes {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; server_path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$smb_user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$smb_server&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$vol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; mount_path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$smb_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$vol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; prompt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;Password for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$smb_server&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;:&amp;quot;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;spawn mount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;t smbfs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$server_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot; &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$mount_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;expect {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$prompt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;{
            send &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$smb_password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e3bbab;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;eof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;puts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;Mounted &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$server_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt; on &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$mount_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;} timeout {
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;puts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;Failed to mount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$server_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt; on &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$mount_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;}
    }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Next do the same for a &lt;code&gt;bash&lt;&#x2F;code&gt; script called &lt;code&gt;mount_encfs.sh&lt;&#x2F;code&gt; to mount the encrypted folders:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ touch mount_encfs.sh
$ chmod a+x mount_encfs.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;#!&#x2F;bin&#x2F;bash
# Remember to mount SMB volumes before running this script!

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ENCFS=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;encfs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ENCFS_PASS=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;$(&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;security&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt; find-generic-password&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt; -gs&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt; EncFS&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt; -w&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Reverse encrypted dirs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;SERVER=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;server&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ENC_DIRS=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;share1 share2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; folder &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ENC_DIRS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;; do
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;src_path=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&#x2F;Volumes&#x2F;$&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;SERVER&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&#x2F;$&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;folder&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    enc_path=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;src_path&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;-encfs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    echo -n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ENCFS_PASS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;\
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ENCFS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; -S -o volname=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;folder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;-encfs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; --reverse &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;src_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot; &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;enc_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;done
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;mount-on-login&quot;&gt;Mount on login&lt;&#x2F;h2&gt;
&lt;p&gt;You can use Automator to create a workflow that mounts everyting on login. Open Automator, choose &amp;quot;File -&amp;gt; New&amp;quot; in the menu and select &amp;quot;Application&amp;quot;. Select the &amp;quot;Utilities&amp;quot; category and drag &amp;quot;Run Shell Script&amp;quot; into the workflow. Replace the command contents with the path to the script that mounts Samba shares. Next drag another &amp;quot;Run Shell Script&amp;quot; into the workflow below the first one, and enter the path to the script that mounts the reverse encrypted folders. To test the workflow, unmount the shares and folders that are already mounted and hit &amp;quot;Run&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Save the workflow, then open &amp;quot;System Preferences -&amp;gt; Users and Groups&amp;quot;. Select your user and navigate to &amp;quot;Login Items&amp;quot;. Press the plus button to add the workflow app you just saved, and check the &amp;quot;Hide&amp;quot; checkbox (you may have to unlock the panel to make changes).&lt;&#x2F;p&gt;
&lt;p&gt;As a final test reboot the Mac. All shares and encrypted folders should be mounted when you login, and are ready to be securely backed up wherever you want.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>Encrypt Directories With EncFS on Mac OS X 10.8</title>
            <pubDate>Sun, 07 Apr 2013 00:00:00 +0000</pubDate>
            <link>https://bjornruud.net/blog/2013/encrypt-directories-with-encfs-on-mac-os-x-10-8/</link>
            <guid>https://bjornruud.net/blog/2013/encrypt-directories-with-encfs-on-mac-os-x-10-8/</guid>
            <description>&lt;h1 id=&quot;encrypt-directories-with-encfs-on-mac-os-x-10-8&quot;&gt;Encrypt Directories With EncFS on Mac OS X 10.8&lt;&#x2F;h1&gt;
&lt;p&gt;Note: With OS X 10.8 my &lt;a href=&quot;&#x2F;2011&#x2F;02&#x2F;encrypt-directories-with-encfs-on-mac-os-x.html&quot;&gt;original post&lt;&#x2F;a&gt; about using encfs has become slightly dated. This is a revised version of that post.&lt;&#x2F;p&gt;
&lt;p&gt;Mac OS X comes with FileVault, so why use EncFS instead? Well, FileVault has a few drawbacks that are &lt;a href=&quot;http:&#x2F;&#x2F;techieblurbs.blogspot.com&#x2F;2010&#x2F;02&#x2F;howto-replace-filevault-with-encfs.html&quot;&gt;summed up here&lt;&#x2F;a&gt;. Personally I also like that with EncFS the encrypted files are stored in the filesystem as normal, you get the ability to use different encryption on different parts of the filesystem, and backup is straightforward.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;Update 2013-11-24:&lt;&#x2F;em&gt;
The installation method described in this post doesn&#x27;t work with OS X 10.9 and Xcode 5. Fortunately an easy solution is to install everything with &lt;a href=&quot;http:&#x2F;&#x2F;brew.sh&#x2F;&quot;&gt;Homebrew&lt;&#x2F;a&gt; as described in &lt;a href=&quot;http:&#x2F;&#x2F;www.mulle-kybernetik.com&#x2F;weblog&#x2F;2013&#x2F;11&#x2F;osx-109-brew-osxfuse-encfs-mac.html&quot;&gt;this blog post&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;brew install osxfuse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
brew install https:&#x2F;&#x2F;gist.github.com&#x2F;defunctzombie&#x2F;7324625&#x2F;raw&#x2F;8c791a397767b7f9e7f725e49a45151885e3c1cb&#x2F;encfs.rb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Previous method:&lt;&#x2F;em&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;www.arg0.net&#x2F;encfs&quot;&gt;EncFS&lt;&#x2F;a&gt; requires FUSE so download and install &lt;a href=&quot;http:&#x2F;&#x2F;osxfuse.github.io&#x2F;&quot;&gt;OSXFuse&lt;&#x2F;a&gt; (MacFuse successor). Now we must get EncFS itself, but finding a build compatible with OSXFuse isn&#x27;t easy. Using &lt;a href=&quot;http:&#x2F;&#x2F;mxcl.github.io&#x2F;homebrew&#x2F;&quot;&gt;Homebrew&lt;&#x2F;a&gt; would be preferable, but the Homebrew encfs package relies on fuse4x which is the predecessor of OSXFuse. Thankfully Patrick Stein has created a Homebrew formula, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jollyjinx&#x2F;encfs.macosx&quot;&gt;encfsmacosxfuse.rb&lt;&#x2F;a&gt;, that compiles encfs against OSXFuse.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;brew install https:&#x2F;&#x2F;github.com&#x2F;jollyjinx&#x2F;encfs.macosx&#x2F;raw&#x2F;master&#x2F;encfsmacosxfuse.rb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;goal&quot;&gt;Goal&lt;&#x2F;h2&gt;
&lt;p&gt;The goal is to mount encrypted directories on login and unmount them on logout. The whole process should be completely transparent to the user and there are several ways to achieve this. One of them is to use login&#x2F;logout hooks as documented &lt;a href=&quot;http:&#x2F;&#x2F;techieblurbs.blogspot.com&#x2F;2010&#x2F;02&#x2F;howto-replace-filevault-with-encfs.html&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;That is a nice solution, but in order for the keychain password to be accessible when the hook processes execute it must be placed in a public keychain. The reason is that the user&#x27;s private keychain isn&#x27;t unlocked yet at that point. I wanted a solution where the password was administered by the user and stored in his private keychain. I also wanted any scripts to be stored and executed in userspace.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;&#x2F;h2&gt;
&lt;p&gt;First we create the encrypted directory. Make a directory where the encrypted files will be stored, and one which will be the mount point in which the decrypted versions of the files will appear. Then run the &lt;code&gt;encfs&lt;&#x2F;code&gt; command and follow the instructions.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
mkdir -p .encrypted&#x2F;Vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
mkdir -p Documents&#x2F;Vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
encfs ~&#x2F;.encrypted&#x2F;Vault ~&#x2F;Documents&#x2F;Vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
... follow instructions ...&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
... check that encryption works ...&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
umount Documents&#x2F;Vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To solve the login&#x2F;logout problem I created a script which handles both. It executes upon login and mounts the encrypted directories with a password from the user&#x27;s keychain. The script then goes to sleep. When the user logs out the sleeping script gets a SIGTERM (15) signal which is intercepted. The script then unmounts the encrypted directories, performs cleanup, and exits.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the script which I put in &lt;code&gt;~&#x2F;bin&#x2F;encfsd.sh&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;#!&#x2F;bin&#x2F;bash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ENCFS=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;&#x2F;path&#x2F;to&#x2F;encfs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ENCDIR=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&#x2F;.encrypted&#x2F;Vault&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
DECDIR=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&#x2F;Documents&#x2F;Vault&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;cleanup {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Kill sleep command ($! is PID of last command launched in background)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;kill $!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    umount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;DECDIR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    exit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
trap cleanup 1 2 3 6 15&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
security find-generic-password -gs EncFS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;&amp;gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;&amp;gt;&#x2F;dev&#x2F;null \&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;cut -d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;&amp;quot;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; -f2 \&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ENCFS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; -S &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ENCDIR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot; &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;DECDIR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Wait for exit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;; do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Sleeping ignores normal signals so start it in a subprocess and wait for it&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;sleep 3600 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    wait&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;done&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The cleanup function is called when the script gets signalled to terminate. It kills the sleep process running in the background, unmounts the encrypted directory, and exits.&lt;&#x2F;p&gt;
&lt;p&gt;After the function body is the trap command which tells the script to call the cleanup function when it receives signal 1, 2, 3, 6 or 15. The last signal, 15, is the default quit signal SIGTERM (check &lt;code&gt;man signal&lt;&#x2F;code&gt; for the rest).&lt;&#x2F;p&gt;
&lt;p&gt;Next comes the &lt;code&gt;security&lt;&#x2F;code&gt; command which retrieves the password from the user&#x27;s keychain. The redirect is necessary since the password is printed to stderr. The output with the password is then sent to the cut command where the password is isolated. It is then sent as input to the &lt;code&gt;encfs&lt;&#x2F;code&gt; command.&lt;&#x2F;p&gt;
&lt;p&gt;After that the script goes to sleep.&lt;&#x2F;p&gt;
&lt;p&gt;To automatically start the script on login it is installed as a Launch Agent. Here are the contents of my &lt;code&gt;~&#x2F;Library&#x2F;LaunchAgents&#x2F;localhost.encfsd.plist&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;xml &lt;&#x2F;span&gt;&lt;span style=&quot;color:#92caf4;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c8c8c8;&quot;&gt;&amp;quot;1.0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#92caf4;&quot;&gt;encoding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c8c8c8;&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;plist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;PUBLIC &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c8c8c8;&quot;&gt;&amp;quot;-&#x2F;&#x2F;Apple&#x2F;&#x2F;DTD PLIST 1.0&#x2F;&#x2F;EN&amp;quot; &amp;quot;http:&#x2F;&#x2F;www.apple.com&#x2F;DTDs&#x2F;PropertyList-1.0.dtd&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;plist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#92caf4;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c8c8c8;&quot;&gt;&amp;quot;1.0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;dict&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;Label&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;localhost.encfsd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ProgramArguments&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;&#x2F;Users&#x2F;boru&#x2F;bin&#x2F;encfsd.sh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;KeepAlive&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&#x2F;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;RunAtLoad&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&#x2F;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;dict&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;plist&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It basically says the system should run the &lt;code&gt;encfsd.sh&lt;&#x2F;code&gt; script once and run when the agent loads.&lt;&#x2F;p&gt;
&lt;p&gt;With the scripts in place the user should now have automatic mount of encrypted directories on login, and they should unmount on logout.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>Manual Fusion Drive Configuration</title>
            <pubDate>Sun, 04 Nov 2012 00:00:00 +0000</pubDate>
            <link>https://bjornruud.net/blog/2012/manual-fusion-drive-configuration/</link>
            <guid>https://bjornruud.net/blog/2012/manual-fusion-drive-configuration/</guid>
            <description>&lt;h1 id=&quot;manual-fusion-drive-configuration&quot;&gt;Manual Fusion Drive Configuration&lt;&#x2F;h1&gt;
&lt;p&gt;Apple is now selling Macs with a feature called Fusion Drive, which merges a SSD and a HDD and keeps your most used files on the SSD. This sounds a lot like tiering in enterprise storage solutions, &lt;a href=&quot;http:&#x2F;&#x2F;arstechnica.com&#x2F;apple&#x2F;2012&#x2F;10&#x2F;more-on-fusion-drive-how-it-works-and-how-to-roll-your-own&#x2F;&quot;&gt;and indeed it is&lt;&#x2F;a&gt;. It turns out this is a built-in feature of CoreStorage (Apple&#x27;s logical volume manager), and that means we can configure this setup on any Mac that runs OS X with Fusion Drive support (10.8.2 and onward guaranteed). I tried this successfully on my iMac with an Intel 520 120 GB SSD and a factory installed 1 TB HDD. I based my test on &lt;a href=&quot;http:&#x2F;&#x2F;jollyjinx.tumblr.com&#x2F;post&#x2F;34638496292&#x2F;fusion-drive-on-older-macs-yes-since-apple-has&quot;&gt;the excellent work&lt;&#x2F;a&gt; done by &lt;a href=&quot;http:&#x2F;&#x2F;jollyjinx.tumblr.com&#x2F;&quot;&gt;Patrick Stein aka jollyjinx&lt;&#x2F;a&gt;. This is what I did:&lt;&#x2F;p&gt;
&lt;p&gt;Backup! This procedure will destroy all existing data, so a full backup is required. A Time Machine backup will simplify the installation process.&lt;&#x2F;p&gt;
&lt;p&gt;To create the CoreStorage volume we&#x27;ll need to boot from a 10.8.2 system. Download the OS X Mountain Lion installation app from the App Store. When the installation dialog pops up just quit it. Mount the installation disk image located here:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;&#x2F;Applications&#x2F;Install OS X Mountain Lion.app&#x2F;Contents&#x2F;SharedSupport&#x2F;InstallESD.dmg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now restore the partition in this image to a USB stick. Insert the USB stick and open Disk Utility. Create a partition on the stick big enough to hold the install image. Select the partition contained in the mounted InstallESD image and choose the Restore tab. The source should already be filled with the correct information but there is no destination specified, so drag the partition created on the USB stick to this field. Press the Restore button to transfer the contents of the install image to the partition on the USB stick.&lt;&#x2F;p&gt;
&lt;p&gt;Leave USB stick inserted and reboot Mac. When you hear the startup sound press and hold the Option (Alt) key. Select the install partition on the USB as boot drive. When the OS X installer has loaded open Disk Utility.&lt;&#x2F;p&gt;
&lt;p&gt;We need partitions to include in the CoreStorage volume, one on the SSD and one on the HDD. Create a single partition on the HDD. As for the SSD, if you are using a non-Apple drive you won&#x27;t have TRIM support in OS X, and one way to mitigate potential performance issues when the drive gets full (and it will at some point with this setup) is to overprovision free space so that there always will be a substantial pool of available cleared cells. If the SSD already has been filled up you can &lt;a href=&quot;http:&#x2F;&#x2F;www.thomas-krenn.com&#x2F;en&#x2F;wiki&#x2F;SSD_Secure_Erase&quot;&gt;secure erase&lt;&#x2F;a&gt; it to recover from performance degradation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.storagereview.com&#x2F;intel_ssd_520_enterprise_review&quot;&gt;Overprovisioning can also improve performance&lt;&#x2F;a&gt; in general, but that depends on the workload and usage patterns. Keep in mind that SandForce equipped drives like the Intel 520 already are overprovisioned and hence might not require extra overprovisioning for normal use cases. I like the idea of overprovisioning so let&#x27;s select 2 partitions for the SSD. The first is a normal partition 104 GB in size, the second is configured as free space.&lt;&#x2F;p&gt;
&lt;p&gt;These partitions will now be joined as a logical volume in Core Storage. Quit Disk Utility, and at the installer dialog select the Tools menu and open Terminal. Let&#x27;s take a look at the current partition layout.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ diskutil list&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&#x2F;dev&#x2F;disk0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
   #:                       TYPE NAME                    SIZE       IDENTIFIER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
   0:      GUID_partition_scheme                        *120.0 GB   disk0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
   1:                        EFI                         209.7 MB   disk0s1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
   2:                  Apple_HFS                         104.0 GB   disk0s2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&#x2F;dev&#x2F;disk1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
   #:                       TYPE NAME                    SIZE       IDENTIFIER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
   0:      GUID_partition_scheme                        *1.0 TB     disk1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
   1:                        EFI                         209.7 MB   disk1s1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
   2:                  Apple_HFS                         999.9 GB   disk1s2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Based on this we want to join disk0s2 and disk1s2. If we wanted to use all of the drives we could simply refer to disk0 and disk1, but since the SSD is now overprovisioned we must specify the partition(s) to use. First we need to create a logical volume group with CoreStorage.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ diskutil cs create FusionVG disk0s2 disk1s2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Take note of the logical volume group UUID from that command (or use &lt;code&gt;diskutil cs list&lt;&#x2F;code&gt; to find it) as it&#x27;s needed in order to create the logical volume.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ diskutil cs createVolume 35C7C1AD-463E-4D94-9FD4-C107D660643B jhfs+ Fusion 100%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
$ diskutil cs list&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
CoreStorage logical volume groups (1 found)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
+-- Logical Volume Group 35C7C1AD-463E-4D94-9FD4-C107D660643B&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    =========================================================&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Name:         FusionVG&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Size:         1103345127424 B (1.1 TB)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Free Space:   28672 B (28.7 KB)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    +-&amp;lt; Physical Volume FDFE44CC-3151-4F68-AEEE-3BD3D1915C2A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |   ----------------------------------------------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |   Index:    0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |   Disk:     disk0s2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |   Status:   Online&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |   Size:     104000000000 B (104.0 GB)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    +-&amp;lt; Physical Volume C6DB4E59-5499-47F6-81C7-3B71F9CAD769&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |   ----------------------------------------------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |   Index:    1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |   Disk:     disk1s2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |   Status:   Online&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |   Size:     999345127424 B (999.3 GB)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    |&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    +-&amp;gt; Logical Volume Family 11D7E8D0-195C-4658-B38B-9B3D9E48CCF4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        ----------------------------------------------------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        Encryption Status:       Unlocked&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        Encryption Type:         None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        Conversion Status:       NoConversion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        Conversion Direction:    -none-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        Has Encrypted Extents:   No&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        Fully Secure:            No&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        Passphrase Required:     No&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        |&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        +-&amp;gt; Logical Volume 1CDA3D65-96DF-4F9B-A374-D08D26AF87EA&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            ---------------------------------------------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            Disk:               disk2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            Status:             Online&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            Size (Total):       1098913529856 B (1.1 TB)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            Size (Converted):   -none-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            Revertible:         No&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            LV Name:            Fusion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            Volume Name:        Fusion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            Content Hint:       Apple_HFS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The logical volume is now ready for installation. Quit Terminal to go back to the installation dialog. In order to recreate the Recovery partition, do not restore directly from a Time Machine backup. Instead do a normal reinstallation of OS X and migrate data from the backup when presented with the option to do so.&lt;&#x2F;p&gt;
&lt;p&gt;Enjoy your very own Fusion Drive!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;jollyjinx.tumblr.com&#x2F;post&#x2F;34638496292&#x2F;fusion-drive-on-older-macs-yes-since-apple-has&quot;&gt;Fusion Drive on older Macs? YES!&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.petralli.net&#x2F;2012&#x2F;10&#x2F;analyzing-apples-fusion-drive-in-an-attempt-to-retrofit-an-existing-macs-with-an-ssd-and-a-traditional-hard-disk&#x2F;&quot;&gt;DIY Fusion Drive: an attempt to retrofit a pre-fall 2012 Mac with an SSD and a traditional hard disk&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.petralli.net&#x2F;2012&#x2F;10&#x2F;what-happens-to-fusion-drive-when-you-use-boot-camp&#x2F;&quot;&gt;What happens to Fusion Drive when you use Boot Camp&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.storagereview.com&#x2F;intel_ssd_520_enterprise_review&quot;&gt;Intel SSD 520 Enterprise Review&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.anandtech.com&#x2F;show&#x2F;2738&#x2F;8&quot;&gt;Understanding the SSD Performance Degradation Problem&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.thomas-krenn.com&#x2F;en&#x2F;wiki&#x2F;SSD_Secure_Erase&quot;&gt;SSD Secure Erase&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        <item>
            <title>Autogenerated build information in Xcode 4</title>
            <pubDate>Sat, 26 May 2012 00:00:00 +0000</pubDate>
            <link>https://bjornruud.net/blog/2012/autogenerated-build-information-in-xcode-4/</link>
            <guid>https://bjornruud.net/blog/2012/autogenerated-build-information-in-xcode-4/</guid>
            <description>&lt;h1 id=&quot;autogenerated-build-information-in-xcode-4&quot;&gt;Autogenerated build information in Xcode 4&lt;&#x2F;h1&gt;
&lt;p&gt;In the Xcode project settings there are &amp;quot;Version&amp;quot; and &amp;quot;Build&amp;quot; fields for each target. These are the &lt;code&gt;CFBundleShortVersionString&lt;&#x2F;code&gt; and &lt;code&gt;CFBundleVersion&lt;&#x2F;code&gt; fields respectively in the info plist. The Version field is the version identifier presented to the user, and is the one Apple cares about when submitting an app to the App Store. It should use a readable scheme like major.minor.micro, e.g. 1.0.2.&lt;&#x2F;p&gt;
&lt;p&gt;The Build field however can be whatever you want in order to identify a build: incrementing counter, revision, tag, etc. Many recipes for automatic versioning of an application target this field, but my requirements led to a slightly different solution. Those requirements were:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Don&#x27;t touch the info plist. I want to update Version and Build manually.&lt;&#x2F;li&gt;
&lt;li&gt;Store extra build info in separate file that is automatically generated and isn&#x27;t tracked in repo. I don&#x27;t want to clutter the repo with frequent build info changes.&lt;&#x2F;li&gt;
&lt;li&gt;Include at least build date and revision instead of just build. Other possible data fields could be branch, tag, user, host, etc. This is necessary because a distributed development environment without a dedicated place to create builds has no way to synchronize build numbers. It is also impossible to know who created the build.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The first step to meet these requirements was to write a script, &lt;code&gt;setversion.sh&lt;&#x2F;code&gt;, which leverages the PlistBuddy tool to create and modify a plist:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;#!&#x2F;bin&#x2F;bash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
PLIST=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
HG=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;hg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
PLISTBUDDY=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&#x2F;usr&#x2F;libexec&#x2F;PlistBuddy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
fields=(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;BuildDate&amp;quot; &amp;quot;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;date -u&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt; +&amp;#39;%F %T&amp;#39;)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;BuildRevision&amp;quot; &amp;quot;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$HG&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt; identify &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;cut -d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39; &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; -f1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Create empty plist if it doesn&amp;#39;t exist, clear it if it does&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$PLISTBUDDY -x -c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;Clear dict&amp;quot; &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;PLIST&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Add all fields to plist&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;((i=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;${#fields[*]}; i=i+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    name=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;fields[i]&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    value=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;fields[i+&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#b5cea8;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    $PLISTBUDDY -x -c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;Add :$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt; string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e3bbab;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e3bbab;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot; &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;PLIST&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;done&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The script adds two fields. BuildDate is the UTC timestamp of the build, and BuildRevision is the short form revision hash from the &lt;a href=&quot;http:&#x2F;&#x2F;mercurial.selenic.com&#x2F;&quot;&gt;Mercurial&lt;&#x2F;a&gt; repo. This script is not added to the Xcode project but is kept in the repo (or somewhere more suitable for easy access and sharing).&lt;&#x2F;p&gt;
&lt;p&gt;Next we need to generate a version plist so that we can add it to the project. Run the script in a shell with a suitable plist path and name as argument.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;.&#x2F;setversion.sh MyProject-Version.plist&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Add the generated file to the Xcode project and make sure to mark the proper targets for it if you have more than one.&lt;&#x2F;p&gt;
&lt;p&gt;This file shouldn&#x27;t be tracked in the repo so we add it to &lt;code&gt;.hgignore&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;*-Version.plist&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Next we configure the script to run for each build. Select your project in Xcode and go to &amp;quot;Build Phases&amp;quot; for the target you want to add version information to. Select &amp;quot;Add Build Phase&amp;quot; and choose &amp;quot;Add Run Script&amp;quot;. In the script text field add the path to the script with path to the version plist as argument.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$SRCROOT&#x2F;$PROJECT_NAME&#x2F;setversion.sh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;SRCROOT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&#x2F;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;PROJECT_NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&#x2F;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;PROJECT_NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;-Version.plist&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Rename the build phase if you like and drag it up below &amp;quot;Target Dependencies&amp;quot; to make sure it runs before files are compiled and copied.&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s it! Whenever a build is done in Xcode the version plist will be generated and can be easily accessed:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;NSString *versionPath = [[NSBundle mainBundle] pathForResource:@&amp;quot;MyProject-Version&amp;quot; ofType:@&amp;quot;plist&amp;quot;];&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
NSDictionary *versionDict = [NSDictionary dictionaryWithContentsOfFile:versionPath];&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
NSString *buildDate = [versionDict objectForKey:@&amp;quot;BuildDate&amp;quot;];&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
NSString *revision = [versionDict objectForKey:@&amp;quot;BuildRevision&amp;quot;];&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</description>
        </item>
        <item>
            <title>Encrypt Directories With EncFS On Mac OS X</title>
            <pubDate>Sun, 14 Nov 2010 00:00:00 +0000</pubDate>
            <link>https://bjornruud.net/blog/2010/encrypt-directories-with-encfs-on-mac-os-x/</link>
            <guid>https://bjornruud.net/blog/2010/encrypt-directories-with-encfs-on-mac-os-x/</guid>
            <description>&lt;h1 id=&quot;encrypt-directories-with-encfs-on-mac-os-x&quot;&gt;Encrypt Directories With EncFS On Mac OS X&lt;&#x2F;h1&gt;
&lt;p&gt;Mac OS X comes with FileVault, so why use EncFS instead? Well, FileVault has a few drawbacks that are &lt;a href=&quot;http:&#x2F;&#x2F;techieblurbs.blogspot.com&#x2F;2010&#x2F;02&#x2F;howto-replace-filevault-with-encfs.html&quot;&gt;summed up here&lt;&#x2F;a&gt;. Personally I also like that with EncFS the encrypted files are stored in the filesystem as normal, you get the ability to use different encryption on different parts of the filesystem, and backup is straightforward.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.arg0.net&#x2F;encfs&quot;&gt;EncFS&lt;&#x2F;a&gt; requires FUSE so either install &lt;a href=&quot;http:&#x2F;&#x2F;code.google.com&#x2F;p&#x2F;macfuse&#x2F;&quot;&gt;MacFUSE&lt;&#x2F;a&gt; or install the &lt;a href=&quot;http:&#x2F;&#x2F;www.macports.org&#x2F;&quot;&gt;MacPorts&lt;&#x2F;a&gt; package. Next install EncFS itself. The easy option is the MacPorts package. Advanced users can download the source and compile their own if they want the very latest version, a custom install path, and&#x2F;or a custom build.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;goal&quot;&gt;Goal&lt;&#x2F;h2&gt;
&lt;p&gt;The goal is to mount encrypted directories on login and unmount them on logout. The whole process should be completely transparent to the user and there are several ways to achieve this. One of them is to use login&#x2F;logout hooks as documented &lt;a href=&quot;http:&#x2F;&#x2F;techieblurbs.blogspot.com&#x2F;2010&#x2F;02&#x2F;howto-replace-filevault-with-encfs.html&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;That is a nice solution, but in order for the keychain password to be accessible when the hook processes execute it must be placed in a public keychain. The reason is that the user&#x27;s private keychain isn&#x27;t unlocked yet at that point. I wanted a solution where the password was administered by the user and stored in his private keychain. I also wanted any scripts to be stored and executed in userspace.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;&#x2F;h2&gt;
&lt;p&gt;First we create the encrypted directory. Make a directory where the encrypted files will be stored, and one which will be the mount point in which the decrypted versions of the files will appear. Then run the &lt;code&gt;encfs&lt;&#x2F;code&gt; command and follow the instructions.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
mkdir -p .encrypted&#x2F;Vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
mkdir -p Documents&#x2F;Vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
encfs .encrypted&#x2F;Vault Documents&#x2F;Vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
... follow instructions ...&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
... check that encryption works ...&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
umount Documents&#x2F;Vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To solve the login&#x2F;logout problem I created a script which handles both. It executes upon login and mounts the encrypted directories with a password from the user&#x27;s keychain. The script then goes to sleep. When the user logs out the sleeping script gets a SIGTERM (15) signal which is intercepted. The script then unmounts the encrypted directories, performs cleanup, and exits.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the script which I put in &lt;code&gt;~&#x2F;bin&#x2F;encfsd.sh&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;#!&#x2F;bin&#x2F;bash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ENCFS=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;&#x2F;path&#x2F;to&#x2F;encfs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ENCDIR=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&#x2F;.encrypted&#x2F;Vault&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
DECDIR=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#dcdcdc;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&#x2F;Documents&#x2F;Vault&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;cleanup {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Kill sleep command ($! is PID of last command launched in background)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;kill $!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    umount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;DECDIR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    exit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
trap cleanup 1 2 3 6 15&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
security find-generic-password -ga EncFS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;&amp;gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;&amp;gt;&#x2F;dev&#x2F;null \&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;cut -d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;&amp;quot;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; -f2 \&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ENCFS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt; -S &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ENCDIR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot; &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;DECDIR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Wait for exit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;; do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Sleeping ignores normal signals so start it in a subprocess and wait for it&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;sleep 3600 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    wait&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;done&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The cleanup function is called when the script gets signalled to terminate. It kills the sleep process running in the background, unmounts the encrypted directory, and exits.&lt;&#x2F;p&gt;
&lt;p&gt;After the function body is the trap command which tells the script to call the cleanup function when it receives signal 1, 2, 3, 6 or 15. The last signal, 15, is the default quit signal SIGTERM (check &lt;code&gt;man signal&lt;&#x2F;code&gt; for the rest).&lt;&#x2F;p&gt;
&lt;p&gt;Next comes the &lt;code&gt;security&lt;&#x2F;code&gt; command which retrieves the password from the user&#x27;s keychain. The redirect is necessary since the password is printed to stderr. The output with the password is then sent to the cut command where the password is isolated. It is then sent as input to the &lt;code&gt;encfs&lt;&#x2F;code&gt; command.&lt;&#x2F;p&gt;
&lt;p&gt;After that the script goes to sleep.&lt;&#x2F;p&gt;
&lt;p&gt;To automatically start the script on login it is installed as a Launch Agent. Here are the contents of my &lt;code&gt;~&#x2F;Library&#x2F;LaunchAgents&#x2F;localhost.encfsd.plist&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;xml &lt;&#x2F;span&gt;&lt;span style=&quot;color:#92caf4;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c8c8c8;&quot;&gt;&amp;quot;1.0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#92caf4;&quot;&gt;encoding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c8c8c8;&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;plist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;PUBLIC &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c8c8c8;&quot;&gt;&amp;quot;-&#x2F;&#x2F;Apple&#x2F;&#x2F;DTD PLIST 1.0&#x2F;&#x2F;EN&amp;quot; &amp;quot;http:&#x2F;&#x2F;www.apple.com&#x2F;DTDs&#x2F;PropertyList-1.0.dtd&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;plist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#92caf4;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c8c8c8;&quot;&gt;&amp;quot;1.0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;dict&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;KeepAlive&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&#x2F;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;Label&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;localhost.encfsd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;LimitLoadToSessionType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;Background&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;Program&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;&#x2F;path&#x2F;to&#x2F;encfsd.sh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;RunAtLoad&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&#x2F;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;dict&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;plist&lt;&#x2F;span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It basically says the system should run the &lt;code&gt;encfsd.sh&lt;&#x2F;code&gt; script once, run it as a background process, and run when the agent loads.&lt;&#x2F;p&gt;
&lt;p&gt;With the scripts in place the user should now have automatic mount of encrypted directories on login, and they should unmount on logout.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>Authorize MoinMoin Users With WordPress DB</title>
            <pubDate>Sat, 17 Oct 2009 00:00:00 +0000</pubDate>
            <link>https://bjornruud.net/blog/2009/authorize-moinmoin-users-with-wordpress-db/</link>
            <guid>https://bjornruud.net/blog/2009/authorize-moinmoin-users-with-wordpress-db/</guid>
            <description>&lt;h1 id=&quot;authorize-moinmoin-users-with-wordpress-db&quot;&gt;Authorize MoinMoin Users With WordPress DB&lt;&#x2F;h1&gt;
&lt;p&gt;In order to authorize &lt;a href=&quot;http:&#x2F;&#x2F;moinmo.in&#x2F;&quot;&gt;MoinMoin&lt;&#x2F;a&gt; wiki users with a &lt;a href=&quot;http:&#x2F;&#x2F;wordpress.org&#x2F;&quot;&gt;WordPress&lt;&#x2F;a&gt; user database, MoinMoin needs a custom authorization plugin. Two packages are required for it to work: &lt;a href=&quot;http:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;mysql-python&quot;&gt;MySQLdb&lt;&#x2F;a&gt; for MySQL support, and the &lt;a href=&quot;http:&#x2F;&#x2F;www.openwall.com&#x2F;phpass&#x2F;&quot;&gt;PHPass&lt;&#x2F;a&gt; Python module for bcrypt password hash support so we can compare stored and given password.&lt;&#x2F;p&gt;
&lt;p&gt;The following is the necessary code from &lt;code&gt;wikiconfig.py&lt;&#x2F;code&gt;. You can put this anywhere you want as long as Python can find it, but sticking it in &lt;code&gt;wikiconfig.py&lt;&#x2F;code&gt; is an easy solution.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;WordpressAuth(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4ec9b0;&quot;&gt;BaseAuth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;):&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Authenticate users with a Wordpress database.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    This class has the following module requirements:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    - MySQLdb (http:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;mysql-python)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    - phpass (http:&#x2F;&#x2F;www.openwall.com&#x2F;phpass&#x2F;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    &amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    login_inputs = [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;username&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;password&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    logout_possible = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    name = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;wordpress&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;__init__(self, autocreate=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                 db_host=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;localhost&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, db_name=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                 db_user=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, db_passwd=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;):&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Initialize class.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        autocreate -- When set to False Moin user accounts are not updated&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
                      or created.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        db_host -- Hostname where Wordpress DB resides.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        db_name -- Name of Wordpress DB.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        db_user -- Name of DB account with read rights to the wp_user table.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        db_passwd -- Password of DB account.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        &amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        BaseAuth.__init__(self)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        self.autocreate = autocreate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        self.db_host = db_host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        self.db_name = db_name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        self.db_user = db_user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        self.db_passwd = db_passwd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;login(self, request, user_obj, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;kw):&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Handle Moin login request, using Wordpress DB for authentication.&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        username = kw.get(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;username&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        password = kw.get(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;password&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        _ = request.getText&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Continue if user is already valid&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;user_obj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;user_obj.valid:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ContinueLogin(user_obj)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;if not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;(username &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;password):&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ContinueLogin(user_obj, _(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;Please enter both user name and password.&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Authenticate user and password against Wordpress DB&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;row = self.verifyUser(username, password)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;row:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            user_login, user_pass, user_nicename, user_email = row&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            u = user.User(request,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                          auth_username=username,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                          auth_method=self.name,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                          auth_attribs=(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;name&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;password&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;email&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;aliasname&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            u.name = user_login&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            u.aliasname = user_nicename&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            u.email = user_email&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;self.autocreate:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                u.create_or_update(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ContinueLogin(u)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ContinueLogin(user_obj, _(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;Invalid username or password.&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;verifyUser(self, username=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, password=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;):&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Verify a username and password with a Wordpress database.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        This implementation assumes passwords are hashed using bcrypt, and are&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        PHPass compatible.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        username -- Name of Wordpress user.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        password -- Password of Wordpress user.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
        &amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9b9b9b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;MySQLdb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        db = MySQLdb.connect(host=self.db_host,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                             db=self.db_name,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                             user=self.db_user,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                             passwd=self.db_passwd)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        c = db.cursor()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        q = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;SELECT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e3bbab;&quot;&gt; user_login, user_pass, user_nicename, user_email&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff3333;&quot;&gt;
             &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;FROM wp_users WHERE user_login=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b4cea8;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;&amp;quot; % (username)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff3333;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;result = c.execute(q)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;result == &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            row = c.fetchone()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9b9b9b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;phpass  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# A bit ugly, but the module is only needed here&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;row &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;(row[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;] == phpass.crypt_private(password, row[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;])):&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                result = row&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                result = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
            result = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        c.close()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;Config(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4ec9b0;&quot;&gt;DefaultConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;):&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;#~ class FarmConfig(DefaultConfig):&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    auth = [WordpressAuth(autocreate=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                          db_host=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;localhost&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, db_name=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;wpdb&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                          db_user=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;wpuser&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, db_passwd=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;wppass&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;)]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# don&amp;#39;t let the user change these, but show them&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;user_form_disable = [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;name&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;aliasname&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;email&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# remove completely&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;user_form_remove = [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;password&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;password2&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;css_url&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;create&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;account_sendmail&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;#39;jid&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Is this necessary?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;user_autocreate = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2009&#x2F;authorize-moinmoin-users-with-wordpress-db&#x2F;wikiconfig-wordpress-auth.zip&quot;&gt;Download example wikiconfig.py&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The authorization plugins included with MoinMoin are good examples of what you can do, so study them if you want to customize something or write your own.&lt;&#x2F;p&gt;
&lt;p&gt;If we wanted a single sign-on solution we would probably have to use the WordPress cookie in the authentication process. For security we should then store the WordPress session ID in the database and authenticate by comparing that with the session ID in the cookie.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>Batch Image Download With wget</title>
            <pubDate>Sat, 17 Oct 2009 00:00:00 +0000</pubDate>
            <link>https://bjornruud.net/blog/2009/batch-image-download-with-wget/</link>
            <guid>https://bjornruud.net/blog/2009/batch-image-download-with-wget/</guid>
            <description>&lt;h1 id=&quot;batch-image-download-with-wget&quot;&gt;Batch Image Download With wget&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;wget&#x2F;&quot;&gt;wget&lt;&#x2F;a&gt; is often used to download single files from the command line, but it can also mirror a website locally or just download part of a website. By specifying the right parameters we can make wget act as batch downloader, retrieving only the files we want.&lt;&#x2F;p&gt;
&lt;p&gt;In this example we assume a website with a sequence of pages, where each page links to the next in the sequence and they all contain a JPEG image. We want to download all the images to the current directory. The following command line does this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ wget --recursive --level=inf --no-directories --no-parent --accept *.jpg URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Or if you prefer, the shorter but more obscure:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ wget -r -l inf -nd -np -A *.jpg URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Let’s take a look at the parameters:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;--recursive&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Makes wget follow links from the start page.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
--level=inf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    This allows for infinite recursion. In combination with another option that limits the&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    recursion depth, like –no-parent, we don’t need to know the necessary depth. Otherwise&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    you should specify a number to set a limit.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
--no-directories&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Default behaviour is to recreate the directory structure of the website. This option&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    makes wget put all files in the same directory.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
--no-parent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Do not follow links to pages above the starting page in the hierarchy.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
--accept *.jpg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Here we specify what kind of file to download. The parameter can be a comma-separated list.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;For other options and details about those listed here, check the wget man page.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;In one scenario I used wget the files had to be zero padded (like &lt;code&gt;img-01.jpg&lt;&#x2F;code&gt; instead of &lt;code&gt;img-1.jpg&lt;&#x2F;code&gt;). For a single directory this did the job (for filenames with two digits):&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ rename &amp;#39;s&#x2F;-([0-9])\.&#x2F;-0$1\.&#x2F;&amp;#39; *.jpg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;For a directory tree this was used:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$ find . &amp;quot;*.jpg&amp;quot; -type f -print0 | xargs --null rename &amp;#39;s&#x2F;-([0-9])\.&#x2F;-0$1\.&#x2F;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</description>
        </item>
        <item>
            <title>GRE Tunnel With Multicast Support</title>
            <pubDate>Sat, 17 Oct 2009 00:00:00 +0000</pubDate>
            <link>https://bjornruud.net/blog/2009/gre-tunnel-with-multicast-support/</link>
            <guid>https://bjornruud.net/blog/2009/gre-tunnel-with-multicast-support/</guid>
            <description>&lt;p&gt;Generic Routing Encapsulation (GRE) is a tunneling protocol developed by Cisco and is widely used for IP-to-IP tunneling. Since it can encapsulate all kinds of IP traffic, GRE can be used to transport multicast traffic over networks that have no multicast support.&lt;&#x2F;p&gt;
&lt;p&gt;Please note that Ubuntu Server was used as the basis for this article. Debian based Linux distributions will probably work with little to no modification, but other distributions might require more work or a different configuration.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;Tip:&lt;&#x2F;em&gt; On Linux the &lt;code&gt;ip_gre&lt;&#x2F;code&gt; module is needed. Add it to &lt;code&gt;&#x2F;etc&#x2F;modules&lt;&#x2F;code&gt; to load it at boot time.&lt;&#x2F;p&gt;
&lt;p&gt;Consider a scenario where we have two networks, &lt;code&gt;Site1&lt;&#x2F;code&gt; and &lt;code&gt;Site2&lt;&#x2F;code&gt;, and both are connected to the internet. The network owners want to send multicast traffic between the two networks, which is not supported by the network between them.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2009&#x2F;gre-tunnel-with-multicast-support&#x2F;gre-sites.png&quot; alt=&quot;Example GRE sites&quot; title=&quot;gre-sites&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The site networks have the following configuration:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;Site1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
network 10.0.1.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
netmask 255.255.255.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
router  10.0.1.1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
Site2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
network 10.0.2.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
netmask 255.255.255.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
router  10.0.2.1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The routers are assumed to be Linux boxes with a GRE tunnel configuration on each one. Tunnel devices are created using the ip command. These network devices behave as network interfaces. The following commands will create the tunnel interface for &lt;code&gt;Site1&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ip tunnel add gre-site2 mode gre remote 10.0.2.1 local 10.0.1.1 ttl 255&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ip link set gre-site2 up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ip link set gre-site2 multicast on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ip addr add 10.10.0.1&#x2F;30 broadcast 10.10.0.3 dev gre-site2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Tip:&lt;&#x2F;em&gt; The &lt;code&gt;ip&lt;&#x2F;code&gt; command is found in the &lt;code&gt;iproute&lt;&#x2F;code&gt; (or &lt;code&gt;iproute2&lt;&#x2F;code&gt;) package.&lt;&#x2F;p&gt;
&lt;p&gt;The first command line creates the tunnel interface. A tunnel is defined by its endpoints, so we have a remote (destination) IP address and a local (source) IP address. The TTL is set to maximum since we don&#x27;t know the structure of the underlying network used by the tunnel.&lt;&#x2F;p&gt;
&lt;p&gt;Command lines two and three brings the interface up to an active state and enables multicast on it. Your multicasting routing daemon of choice might not automatically be aware of new multicast capable interfaces, so remember to do any necessary actions or configuration changes to make it register the new interface.&lt;&#x2F;p&gt;
&lt;p&gt;Command line four adds an IP address to the GRE interface so that we can address it as part of our network. We have chosen a &lt;code&gt;&#x2F;30&lt;&#x2F;code&gt; network since a tunnel only needs two IP adresses.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Site2&lt;&#x2F;code&gt; is configured the same way:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ip tunnel add gre-site1 mode gre remote 10.0.1.1 local 10.0.2.1 ttl 255&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ip link set gre-site1 up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ip link set gre-site1 multicast on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
ip addr add 10.10.0.2&#x2F;30 broadcast 10.10.0.3 dev gre-site1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The tunnel should now be functional. Try to ping the endpoint addresses from the routers. If there is no contact, see if the routing table contains the correct entry for the &lt;code&gt;10.10.0.0&#x2F;30&lt;&#x2F;code&gt; network.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;bjornruud.net&#x2F;blog&#x2F;2009&#x2F;gre-tunnel-with-multicast-support&#x2F;gre-sites-tunnel.png&quot; alt=&quot;GRE tunnel diagram&quot; title=&quot;gre-sites-tunnel&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;To get traffic through the tunnel you must define a route to the appropriate network. To get traffic from &lt;code&gt;Site1&lt;&#x2F;code&gt; to &lt;code&gt;Site2&lt;&#x2F;code&gt;, &lt;code&gt;Site1&lt;&#x2F;code&gt; must know that the &lt;code&gt;Site2&lt;&#x2F;code&gt; network is accessed through the tunnel:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ip route add 10.0.2.0&#x2F;24 via 10.10.0.2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This makes all packets destined for the &lt;code&gt;Site2&lt;&#x2F;code&gt; network &lt;code&gt;10.0.2.0&#x2F;24&lt;&#x2F;code&gt; be routed to the other end of the tunnel (&lt;code&gt;10.10.0.2&lt;&#x2F;code&gt; as seen from &lt;code&gt;Site1&lt;&#x2F;code&gt;). If all traffic is supposed to go there just replace the default route:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;ip route replace default via 10.10.0.2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;Site2&lt;&#x2F;code&gt; will of course need a similar configuration for packets to get to the &lt;code&gt;Site1&lt;&#x2F;code&gt; network.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;adjusting-mss&quot;&gt;Adjusting MSS&lt;&#x2F;h2&gt;
&lt;p&gt;Since a GRE packet reserves some space for its header, the total amount of space available for the payload is less than the typical maximum TCP packet size. Consequently, if PMTUD fails then packets that can&#x27;t be fragmented will not get through the tunnel. A typical symptom of this happening is when web browsing over the tunnel fails but some other types of traffic works (like ping with small packets). One solution to this is to clamp MSS to PMTU using iptables, ensuring that all packets stay below the tunnel packet size limit. Let&#x27;s do this on &lt;code&gt;Site2&lt;&#x2F;code&gt; in our scenario:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;iptables -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN \&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
         -o gre-site1 -j TCPMSS --clamp-mss-to-pmtu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Let&#x27;s take a look at the options.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;-t mangle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Indicates we are using the mangle table to alter a packet in some way.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
-A POSTROUTING&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Means the mangling is done after the routing stage. We only want to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    affect packets going to a specific interface.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
-p tcp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Defines which protocol to look for.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
--tcp-flags&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Sets the TCP flags to look for, and which of them have to be set.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
-o gre-site1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Sets the output interface for the packet.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
-j TCPMSS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Defines which iptable target to jump to if the packet matches. TCPMSS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    allows us to alter the MSS value of TCP SYN packets (see iptables man&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    page for details).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
--clamp-mss-to-pmtu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
    Tells iptables to automatically set the new MSS to PMTU - 40.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;network-scripts&quot;&gt;Network Scripts&lt;&#x2F;h2&gt;
&lt;p&gt;Everything done so far in our scenario has been done manually. Typing all of it every time the server reboots or an interface goes down is out of the question, so it&#x27;s time to look at how we can automate it. There are many ways that can be done, but the following is the author&#x27;s preference and should serve well as an example.&lt;&#x2F;p&gt;
&lt;p&gt;A GRE tunnel is clearly dependent on another network interface to exist, either physical or virtual. This tells us the configuration should be tied to the interface the tunnel uses, and using custom network interface scripts lets us make that connection. Assuming the &lt;code&gt;Site1&lt;&#x2F;code&gt; router uses &lt;code&gt;eth1&lt;&#x2F;code&gt; to connect to the internet, we can configure &lt;code&gt;&#x2F;etc&#x2F;network&#x2F;interfaces&lt;&#x2F;code&gt; like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;iface eth1 inet static&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  address 10.0.1.1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  netmask 255.255.255.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  network 10.0.1.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  broadcast 10.0.1.255&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  post-up &#x2F;etc&#x2F;network&#x2F;custom&#x2F;eth1-post-up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  pre-down &#x2F;etc&#x2F;network&#x2F;custom&#x2F;eth1-pre-down&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now we must create the &lt;code&gt;&#x2F;etc&#x2F;network&#x2F;custom&lt;&#x2F;code&gt; directory and put in it the file &lt;code&gt;eth1-post-up&lt;&#x2F;code&gt; containing something like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# eth1 post-up dependencies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
IPCMD=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;&#x2F;sbin&#x2F;ip&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
IPTABLES=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;&#x2F;sbin&#x2F;iptables&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# GRE tunnel to Site2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;GREINT=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;gre-site2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
$IPCMD tunnel add $GREINT mode gre remote 10.0.2.1 local 10.0.1.1 ttl 255&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
$IPCMD link set $GREINT up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
$IPCMD link set $GREINT multicast on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
$IPCMD addr add 10.10.0.1&#x2F;30 broadcast 10.10.0.3 dev $GREINT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Make sure the right MTU is used through the tunnel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$IPTABLES -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN \&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  -o $GREINT -j TCPMSS --clamp-mss-to-pmtu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Add a route to the Site2 network&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$IPCMD route add 10.0.2.0&#x2F;24 via 10.10.0.2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;eth1-pre-down&lt;&#x2F;code&gt; file acts as a cleanup script for when &lt;code&gt;eth1&lt;&#x2F;code&gt; is taken down:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# eth1 pre-down dependencies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
IPCMD=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;&#x2F;sbin&#x2F;ip&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
IPTABLES=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;&#x2F;sbin&#x2F;iptables&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
GREINT=&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#282828;color:#d69d85;&quot;&gt;&amp;quot;gre-site2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Clean up iptables MTU correction for GRE tunnel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$IPTABLES -t mangle -D POSTROUTING -p tcp --tcp-flags SYN,RST SYN \&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
  -o $GREINT -j TCPMSS --clamp-mss-to-pmtu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;# Take down GRE tunnel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#608b4e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;$IPCMD link set $GREINT down&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
$IPCMD tunnel del $GREINT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#dcdcdc;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Create similar scripts on &lt;code&gt;Site2&lt;&#x2F;code&gt;&#x27;s router and you&#x27;re all set.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20180129185606&#x2F;http:&#x2F;&#x2F;lartc.org&#x2F;howto&#x2F;lartc.tunnel.gre.html&quot;&gt;Linux Advanced Routing &amp;amp; Traffic Control&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Generic_Routing_Encapsulation&quot;&gt;Generic Routing Encapsulation on Wikipedia&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;linux-ip.net&#x2F;&quot;&gt;Guide to IP Layer Network Administration with Linux&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.linuxfoundation.org&#x2F;en&#x2F;Net:Iproute2&quot;&gt;iproute2&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
        </item>
    </channel>
</rss>
